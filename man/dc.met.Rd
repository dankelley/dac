% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/met.R
\name{dc.met}
\alias{dc.met}
\title{Download and Cache a Meteorology File}
\usage{
dc.met(
  id,
  year,
  month,
  deltat = "hour",
  destdir = ".",
  destfile,
  force = FALSE,
  dryrun = FALSE,
  debug = getOption("dcDebug", 0)
)
}
\arguments{
\item{id}{A number giving the "Station ID" of the station of interest.}

\item{year}{A number giving the year of interest. Ignored unless \code{deltat}
is \code{"hour"}. If \code{year} is not given, it defaults to the present year.}

\item{month}{A number giving the month of interest. Ignored unless \code{deltat}
is \code{"hour"}. If \code{month} is not given, it defaults to the present
month.}

\item{deltat}{Optional character string indicating the time step of the
desired dataset. Only \code{"hour"} or \code{"month"} are permitted.
If \code{deltat} is not given, it defaults to \code{"hour"}.}

\item{destdir}{character value indicating the directory in which to store
downloaded files. The default value of \code{"."} means to store the
downloaded file in the present working directory.  Set \code{destdir=NULL}
if \code{destfile} is a filename with full path information.
File clutter is reduced by creating a top-level directory called
\code{data}, with subdirectories for various file types; see
\dQuote{Examples}.}

\item{destfile}{character value indicating the name of the file.
If not supplied, then the file name is constructed from the other
parameters of the function call, so that subsequent calls with
the same parameters will yield the same result; this is useful
for caching.}

\item{force}{A logical value that indicates whether to force the download,
even if the pathname constructed from \code{destdir} and \code{destfile}
already exists.}

\item{dryrun}{A logical value that indicates whether to return the constructed
web query, without attempting to download the file. This can be helpful in
designing responses to changing URLs.}

\item{debug}{an integer specifying whether debugging information is
to be printed during processing. The printing is done by
a call to \code{\link[=dcDebug]{dcDebug()}}.  Setting \code{debug=0}
turns off this form of debugging, while higher values yield
more information. If one \code{dc} function calls another, it
passes the value of \code{debug} but decreased by 1, which means
that the value of \code{debug} controls not just the breadth
of debugging, but also the depth.}
}
\value{
String indicating the full pathname to the downloaded file.
}
\description{
The data are downloaded with \code{\link[utils:download.file]{utils::download.file()}}
pointed to the Environment Canada website (ref 1)
using queries that had to be devised by reverse-engineering, since the agency
does not provide documentation about how to construct queries. Caution: the
query format changes from time to time, so \code{\link[=dc.met]{dc.met()}} may work one
day, and fail the next.
}
\details{
The constructed query contains Station ID, as provided in the \code{id} argument.
Note that this seems to be a creation of Environment Canada, alone;
it is distinct from the more standard "Climate ID" and "WMO ID".
To make things more difficult, Environment Canada states that the
Station ID is subject to change over time. (Whether this applies to existing
data is unclear.)

Given these difficulties with Station ID, users are advised to consult
the Environment Canada website (ref 1) before downloading any data,
and to check it from time to time
during the course of a research project, to see if the Station ID has changed.
It can be very helpful to use Gavin Simpson's
\code{canadaHCD} package (ref 2) to look up Station IDs. This package maintains
a copy of the Environment Canada listing of stations, and its
\code{find_station} function provides an easy way to determine Station IDs.
After that, its \code{hcd_hourly} function (and related functions) make
it easy to read data.
}
\examples{
\dontrun{
## Download data for Halifax International Airport, in September
## of 2003. (This dataset is used for data(met) in the oce package.)
library(dc)
metFile <- dc.met(6358, 2003, 9, destdir="~/data/met")
library(oce)
met <- read.met(metFile)
plot(met)
}

}
\references{
\enumerate{
\item Environment Canada website for Historical Climate Data
\url{http://climate.weather.gc.ca/index_e.html}
\item Gavin Simpson's \code{canadaHCD} package on GitHub
\url{https://github.com/gavinsimpson/canadaHCD}
}
}
\seealso{
The work is done with \code{\link[=dc]{dc()}}.

Other functions that download ocean-related data: 
\code{\link{dc.coastline}()},
\code{\link{dc.g1sst}()},
\code{\link{dc.hydrography}()},
\code{\link{dc.topo}()},
\code{\link{dc.woa}()}
}
\author{
Dan Kelley

Dan Kelley 2017-09-16
}
\concept{functions that download ocean-related data}
